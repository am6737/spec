syntax = "proto3";

package staticvolume;

import "github.com/container-storage-interface/spec/lib/go/csi/csi.proto";
//import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/descriptor.proto";

option go_package = ".;staticvolume";

service Controller {
  rpc CreateVolume(CreateVolumeRequest) returns (CreateVolumeResponse);
  rpc DeleteVolume(DeleteVolumeRequest) returns (DeleteVolumeResponse);
}

message PV {
  string name = 1;
  string namespace = 2;
  string volume_handle = 3;
  string capacity = 4;
  string storage_class_name = 5;
  map<string, string> volume_attributes = 6;
  repeated string access_mode = 7;
  string reclaim_policy = 8;
}

message PVC {
  string name = 1;
  string namespace = 2;
  string capacity = 3;
  string storage_class_name = 4;
  repeated string access_mode = 5;
  bool read_only = 6;

}

message SC {
  string name = 1;
  string provisioner = 2;
  map<string, string> parameters = 3;
}

message CreateVolumeRequest {
  string name = 1;
  string capacity = 2;
  map<string, string> parameters = 3;
  map<string, string> secrets = 4;
  PV pv = 5;
  PVC pvc = 6;
  SC sc = 7;
}

message CreateVolumeResponse {
  string volume_id = 1;
}

message DeleteVolumeRequest {
  // The ID of the volume to be deprovisioned.
  // This field is REQUIRED.
  string volume_id = 1;
  string namespace = 2;

  // Secrets required by plugin to complete volume deletion request.
  // This field is OPTIONAL. Refer to the `Secrets Requirements`
  // section on how to use this field.
  map<string, string> secrets = 3 [(csi.v1.csi_secret) = true];
}

message DeleteVolumeResponse {
  // Intentionally empty.
}